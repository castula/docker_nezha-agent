name: Manual Docker Build and Push

on:
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Get Latest Version and Download Artifacts
        id: build_condition
        run: |
          set -e
          REMOTE_VERSION=$(curl -s "https://api.github.com/repos/nezhahq/agent/releases/latest" | jq -r .tag_name)
          echo "ÊúÄÊñ∞ËøúÁ®ãÁâàÊú¨: ${REMOTE_VERSION}"
          
          echo "ÊâãÂä®ÊûÑÂª∫Ëß¶ÂèëÔºåÁõ¥Êé•ÊûÑÂª∫ÊúÄÊñ∞ÁâàÊú¨."
          echo "SHOULD_BUILD=true" >> "$GITHUB_OUTPUT"
          echo "AGENT_VERSION=${REMOTE_VERSION}" >> "$GITHUB_OUTPUT"

          mkdir -p build-context
          ARCHS=("amd64" "arm64")
          for arch in "${ARCHS[@]}"; do
            echo "Ê≠£Âú®‰∏ãËΩΩ nezha-agent_linux_${arch}.zip"
            curl -fL -o build-context/nezha-agent_linux_${arch}.zip "https://github.com/nezhahq/agent/releases/download/${REMOTE_VERSION}/nezha-agent_linux_${arch}.zip"
          done

      - name: Debug build condition
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Should build: ${{ steps.build_condition.outputs.SHOULD_BUILD }}"
          echo "Agent version: ${{ steps.build_condition.outputs.AGENT_VERSION }}"

      - name: Set up QEMU
        if: ${{ steps.build_condition.outputs.SHOULD_BUILD == 'true' }}
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: ${{ steps.build_condition.outputs.SHOULD_BUILD == 'true' }}
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: ${{ steps.build_condition.outputs.SHOULD_BUILD == 'true' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to DockerHub
        if: ${{ steps.build_condition.outputs.SHOULD_BUILD == 'true' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push (multi-arch) to GHCR and DockerHub
        if: ${{ steps.build_condition.outputs.SHOULD_BUILD == 'true' }}
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/${{ github.repository_owner }}/nezha-agent:${{ steps.build_condition.outputs.AGENT_VERSION }}
            ghcr.io/${{ github.repository_owner }}/nezha-agent:latest
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/nezha-agent:${{ steps.build_condition.outputs.AGENT_VERSION }}
            docker.io/${{ secrets.DOCKERHUB_USERNAME }}/nezha-agent:latest
          build-args: |
            AGENT_VERSION=${{ steps.build_condition.outputs.AGENT_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Delete untagged images from GHCR
        if: ${{ steps.build_condition.outputs.SHOULD_BUILD == 'true' }}
        uses: Chizkiyahu/delete-untagged-ghcr-action@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository_owner: ${{ github.repository_owner }}
          repository: ${{ github.event.repository.name }}
          package_name: nezha-agent
          untagged_only: true
          owner_type: ${{ github.event.repository.owner.type == 'Organization' && 'org' || 'user' }}

      - name: Build Summary
        if: always()
        run: |
          if [ "${{ steps.build_condition.outputs.SHOULD_BUILD }}" == "true" ]; then
            echo "‚úÖ ÊâãÂä®ÊûÑÂª∫ÂÆåÊàê"
            echo "üì¶ ÊûÑÂª∫ÁâàÊú¨: ${{ steps.build_condition.outputs.AGENT_VERSION }}"
            echo "üè∑Ô∏è Êé®ÈÄÅÊ†áÁ≠æ:"
            echo "  - ghcr.io/${{ github.repository_owner }}/nezha-agent:${{ steps.build_condition.outputs.AGENT_VERSION }}"
            echo "  - ghcr.io/${{ github.repository_owner }}/nezha-agent:latest"
            echo "  - docker.io/${{ secrets.DOCKERHUB_USERNAME }}/nezha-agent:${{ steps.build_condition.outputs.AGENT_VERSION }}"
            echo "  - docker.io/${{ secrets.DOCKERHUB_USERNAME }}/nezha-agent:latest"
          else
            echo "‚è≠Ô∏è Ë∑≥ËøáÊûÑÂª∫"
          fi

  cleanup:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Cleanup old workflow runs (keep last 3)
        env:
          GH_TOKEN: ${{ secrets.GH_PAT }}
        run: |
          gh api repos/${{ github.repository }}/actions/runs --paginate --jq '.workflow_runs | sort_by(.created_at) | reverse | .[3:] | .[].id' | \
          while read run_id; do
            echo "Deleting workflow run $run_id"
            gh api repos/${{ github.repository }}/actions/runs/$run_id -X DELETE
          done
